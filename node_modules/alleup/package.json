{
  "author": {
    "name": "Andriy Bazuta",
    "email": "andriy.bazyuta@gmail.com",
    "url": "http://andriy.bazyuta.me"
  },
  "name": "alleup",
  "description": "Flexible way to resize and upload images to Amazon S3 or file system storages",
  "version": "0.1.1",
  "keywords": [
    "upload",
    "image",
    "imagemagick",
    "amazon",
    "aws",
    "s3",
    "resize",
    "file"
  ],
  "homepage": "https://github.com/tih-ra/alleup",
  "repository": {
    "type": "git",
    "url": "git://github.com/tih-ra/alleup.git"
  },
  "engines": {
    "node": ">= 0.4.1 <= 0.8.6"
  },
  "dependencies": {
    "formidable": "~1.0.7",
    "imagemagick": "~0.1.2",
    "knox": "~0.0.9"
  },
  "devDependencies": {},
  "readme": "Alleup\n=============\n\nFlexible way to resize and upload images to Amazon S3 or file system storages for Node.js. Possible  to add different versions of the same file in cropped or resized variant.\n\n## Installation\n    $ npm install alleup\n\n## Quick Start\n\n1. **You need to create alleup configuration file with image variants and your storages**\nExample:\n\n    ```javascript\n    {\n\t\t\"variants\": {\n\t\t\t\"resize\": {\n\t\t\t\t\"mini\" : \"300x200\",\n\t\t\t\t\"preview\": \"800x600\"\n\t\t\t},\n\t\t\t\"crop\": {\n\t\t\t\t\"thumb\": \"200x200\"\n\t\t\t}\n\t\t},\n\n\t\t\"storage\": {\n\t\t\t\"aws\": {\n\t\t\t\t\"key\" : \"AWS_KEY\",\n\t\t\t\t\"secret\" : \"AWS_SECRET\",\n\t\t\t\t\"bucket\" : \"AWS_BUCKET\"\n\t\t\t},\n\t\t\t\"dir\": {\n\t\t\t\t\"path\" : \"./public/images/\" \n\t\t\t}\n\t\t}\n\t}\nExample config with scopes (only from version 0.1.0):\n\n    {\n\t\t\"variants\": {\n\t\t\t\"projects\": { //projects is scope\n\t\t\t  \"resize\": {\n\t\t\t\t  \"mini\" : \"300x200\",\n\t\t\t\t  \"preview\": \"800x600\"\n\t\t\t  },\n\t\t\t  \"crop\": {\n\t\t\t\t \"thumb\": \"200x200\"\n\t\t\t  }\n\t\t\t},\n\t\t\t\n\t\t\t\"gallery\": { //gallery is scope\n\t\t\t   \"crop\": {\n\t\t\t\t\"thumb\": \"100x100\"\n\t\t\t   }\t\n\t\t\t}\n\t\t},\n\n\t\t\"storage\": {\n\t\t\t\"aws\": {\n\t\t\t\t\"key\" : \"AWS_KEY\",\n\t\t\t\t\"secret\" : \"AWS_SECRET\",\n\t\t\t\t\"bucket\" : \"AWS_BUCKET\"\n\t\t\t},\n\t\t\t\"dir\": {\n\t\t\t\t\"path\" : \"./public/images/\" \n\t\t\t}\n\t\t}\n\t}\n\n\t\n2. **Now you can use Alleup**\n  \n    ```javascript\n    var  Alleup = require('alleup');\n    var alleup = new Alleup({storage : \"aws\", config_file: \"path_to_alleup_config.json\"})\n\t\n  You can use `storage: 'aws'` for store files on Amazon S3 or `storage: 'dir'` for store files in filesystem\n\n## UPLOAD, URL and DELETE\n\t\n1. **Upload example:**\n\t\n    ```javascript\n\n    app.get('/upload_form', function(req, res) {\n      res.writeHead(200, {'content-type': 'text/html'});\n        res.end(\n          '<form action=\"/upload\" enctype=\"multipart/form-data\" method=\"post\">'+\n            '<input type=\"text\" name=\"title\"><br>'+\n            '<input type=\"file\" name=\"upload\" multiple=\"multiple\"><br>'+\n            '<input type=\"submit\" value=\"Upload\">'+\n          '</form>'\n        );\n\n    });\n    \n    app.post('/upload',  function(req, res) {\n\t // Without Scopes\n      alleup.upload(req, res, function(err, file, res){\n\n          console.log(\"FILE UPLOADED: \" + file);\n          // THIS YOU CAN SAVE FILE TO DATABASE FOR EXAMPLE\n          res.end();\n      });\n\n     //With Scope `projects` (look at example of configuration file)\n     alleup.upload(req, res, function(err, file, res){\n\n         console.log(\"FILE UPLOADED: \" + file);\n         // THIS YOU CAN SAVE FILE TO DATABASE FOR EXAMPLE\n         res.end();\n     }, 'projects');\n     \n    });\n\n2. **Remove uploaded file example:**\n\n    ```javascript\n    // Without Scopes\n    app.get('/delete',  function(req, res) {\n      alleup.remove('1322506647.jpg', function(err) {\n\n          // THIS YOU CAN DELETE FILE FROM DATABASE FOR EXAMPLE\n          res.end();\n      });\n\n    // With Scope `projects` (look at example of configuration file)\n    app.get('/delete',  function(req, res) {\n      alleup.remove('1322506647.jpg', function(err) {\n\n          // THIS YOU CAN DELETE FILE FROM DATABASE FOR EXAMPLE\n          res.end();\n      }, 'projects'); \n    });\n\n3. **Get file url example:**\n\n    ```javascript\n    alleup.url(file, variant);\n\n`file` - The name of the file you uploaded, saved for example in database (`345621345.jpg`), `variant` - one of your image variants names from alleup_congig.json\n\t\n### Contribution\n**Pull requests are welcome!!!**\n\n### License\n(The MIT License)\n\nCopyright (c) 2011 Andriy Bazyuta &lt;andriy.bazyuta@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n---\n### Author\nAndriy Bazyuta",
  "readmeFilename": "README.md",
  "_id": "alleup@0.1.1",
  "dist": {
    "shasum": "b89da645b89c9871f5c9567d777db21fab91e68a"
  },
  "_from": "alleup@",
  "_resolved": "https://registry.npmjs.org/alleup/-/alleup-0.1.1.tgz"
}
